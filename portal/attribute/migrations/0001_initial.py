# Generated by Django 3.2.18 on 2023-03-15 00:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("entry", "0005_category_type"),
        ("document", "0008_auto_20230310_1627"),
    ]

    operations = [
        migrations.CreateModel(
            name="AssignedDocumentAttribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AssignedEntryAttribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Attribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(allow_unicode=True, max_length=250, unique=True),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "type",
                    models.CharField(
                        choices=[("entry", "Cadastri"), ("document", "Documento")],
                        max_length=50,
                    ),
                ),
                (
                    "input_type",
                    models.CharField(
                        choices=[
                            ("dropdown", "Dropdown"),
                            ("multiselect", "Multi Select"),
                            ("file", "File"),
                            ("numeric", "Numeric"),
                            ("plain-text", "Plain Text"),
                            ("swatch", "Swatch"),
                            ("boolean", "Boolean"),
                            ("date", "Date"),
                            ("date-time", "Date Time"),
                        ],
                        default="dropdown",
                        max_length=50,
                    ),
                ),
                (
                    "entry_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("vehicle", "Veículo"),
                            ("provider", "Fornecedor"),
                            ("vehicle_and_provider", "Veículo e fornecedor"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("value_required", models.BooleanField(blank=True, default=False)),
                ("visible_in_website", models.BooleanField(blank=True, default=True)),
                (
                    "filterable_in_website",
                    models.BooleanField(blank=True, default=False),
                ),
                (
                    "filterable_in_dashboard",
                    models.BooleanField(blank=True, default=False),
                ),
                ("website_search_position", models.IntegerField(blank=True, default=0)),
                ("available_in_grid", models.BooleanField(blank=True, default=False)),
                (
                    "assigned_documents",
                    models.ManyToManyField(
                        blank=True,
                        related_name="attributesrelated",
                        through="attribute.AssignedDocumentAttribute",
                        to="document.Document",
                    ),
                ),
                (
                    "assigned_entries",
                    models.ManyToManyField(
                        blank=True,
                        related_name="attributesrelated",
                        through="attribute.AssignedEntryAttribute",
                        to="entry.Entry",
                    ),
                ),
            ],
            options={
                "ordering": ("website_search_position", "slug"),
            },
        ),
        migrations.CreateModel(
            name="AttributeValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(db_index=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=250)),
                ("value", models.CharField(blank=True, default="", max_length=100)),
                ("slug", models.SlugField(allow_unicode=True, max_length=255)),
                ("file_url", models.URLField(blank=True, null=True)),
                (
                    "content_type",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("plain_text", models.TextField(blank=True, null=True)),
                ("boolean", models.BooleanField(blank=True, null=True)),
                ("date_time", models.DateTimeField(blank=True, null=True)),
                (
                    "attribute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="values",
                        to="attribute.attribute",
                    ),
                ),
            ],
            options={
                "ordering": ("sort_order", "pk"),
                "unique_together": {("slug", "attribute")},
            },
        ),
        migrations.AddField(
            model_name="assignedentryattribute",
            name="attribute",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="entryassignments",
                to="attribute.attribute",
            ),
        ),
        migrations.AddField(
            model_name="assignedentryattribute",
            name="entry",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="attributes",
                to="entry.entry",
            ),
        ),
        migrations.AddField(
            model_name="assignedentryattribute",
            name="values",
            field=models.ManyToManyField(
                blank=True,
                related_name="entryassignments",
                to="attribute.AttributeValue",
            ),
        ),
        migrations.AddField(
            model_name="assigneddocumentattribute",
            name="attribute",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="documentassignments",
                to="attribute.attribute",
            ),
        ),
        migrations.AddField(
            model_name="assigneddocumentattribute",
            name="document",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="attributes",
                to="document.document",
            ),
        ),
        migrations.AddField(
            model_name="assigneddocumentattribute",
            name="values",
            field=models.ManyToManyField(
                blank=True,
                related_name="documentassignments",
                to="attribute.AttributeValue",
            ),
        ),
        migrations.CreateModel(
            name="AssignedProductAttributeValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(db_index=True, editable=False, null=True),
                ),
                (
                    "assignment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="entryvalueassignment",
                        to="attribute.assignedentryattribute",
                    ),
                ),
                (
                    "value",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="entryvalueassignment",
                        to="attribute.attributevalue",
                    ),
                ),
            ],
            options={
                "ordering": ("sort_order", "pk"),
                "unique_together": {("value", "assignment")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="assignedentryattribute",
            unique_together={("entry", "attribute")},
        ),
        migrations.AlterUniqueTogether(
            name="assigneddocumentattribute",
            unique_together={("document", "attribute")},
        ),
    ]
